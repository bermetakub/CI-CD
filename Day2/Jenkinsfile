pipeline {
    agent { label 'docker' } // Use the label of your agent

    parameters {
        string(name: 'VERSION', defaultValue: 'latest', description: 'Docker image version')
    }

    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials')
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    def app = docker.build("alymkulovabk/sonnet-scenes:${params.VERSION}")
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'DOCKERHUB_CREDENTIALS') {
                        def app = docker.image("alymkulovabk/sonnet-scenes:${params.VERSION}")
                        app.push()
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'The Docker image has been built and pushed successfully.'
        }
        failure {
            echo 'The build or push process failed.'
        }
    }
}

